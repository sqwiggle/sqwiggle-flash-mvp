package com.sqwiggle {	import flash.display.Sprite;	import flash.display.Shape;	import flash.display.MovieClip;	import flash.media.Video;	import flash.net.NetConnection;	import flash.net.NetStream;	import flash.events.MouseEvent;	import flash.events.NetStatusEvent;	import flash.text.TextField;	import flash.text.TextFormat;	import fl.transitions.Tween;	import fl.transitions.easing.*;	public class Member extends Sprite {				public static const MAX_WIDTH = 400;				public var connection	:NetConnection;		public var userId		:String;		public var peerId		:String;		public var userName		:String;				protected var stream	:NetStream;		protected var video 	:Video;		protected var infoBar	:Sprite;		public function Member(userId:String, peerId:String, userName:String='Anonymous') {			this.userId = userId;			this.peerId = peerId;			this.userName = userName;			drawVideo();			drawInfoBar();						addEventListener(MouseEvent.MOUSE_OVER, hoverOver);			addEventListener(MouseEvent.MOUSE_OUT, hoverOut);		}				private function drawVideo():void {						video = new Video();			video.width  = 300;			video.height = (video.width/4)*3;			addChild(video);		}				private function drawInfoBar():void {			trace('drawInfoBar');						var infoHeight = 35;						infoBar = new Sprite();			infoBar.y = video.height-infoHeight;			infoBar.alpha = 0;			addChild(infoBar);			var opaqueBar = new Sprite();			opaqueBar.graphics.beginFill(0x000000, 0.3);			opaqueBar.graphics.drawRect(0,0,video.width,infoHeight);			opaqueBar.graphics.endFill();			infoBar.addChild(opaqueBar);						var textFormat:TextFormat = new TextFormat();			textFormat.font = "Arial";			textFormat.size = 20;						var nameField = new TextField();			nameField.x = 10;			nameField.y = 4; // padding			nameField.width = video.width;			nameField.height = infoBar.height;			nameField.selectable = false;			nameField.textColor = 0xFFFFFF;			nameField.text = userName;			nameField.setTextFormat(textFormat);			nameField.alpha = 0.8;						infoBar.addChild(nameField);		}						public function connectToVideo(connection:NetConnection):void {			trace('Connecting to video of: ' + userId + ', stream: ' + peerId);						stream = new NetStream(connection, peerId);			stream.addEventListener(NetStatusEvent.NET_STATUS, onNetStatus);			stream.receiveAudio(false);			stream.play(userId);			video.attachNetStream(stream);		}				public function disconnectFromVideo():void {			removeChild(video);			stream.close();		}				public function audioOn():void {			stream.receiveAudio(true);		}				public function audioOff():void {			stream.receiveAudio(false);		}				public function onNetStatus(event:NetStatusEvent):void {			trace('Net status ' + peerId + ': ' + event.info.code);		}				private function hoverOver(event:MouseEvent):void {			//infoBar.alpha = 1;			new Tween(infoBar, "alpha", Strong.easeIn, 0, 1, 0.3, true);		}				private function hoverOut(event:MouseEvent):void {			//infoBar.alpha = 0;			new Tween(infoBar, "alpha", Strong.easeIn, 1, 0, 0.3, true);		}	}}