package com.sqwiggle {	import flash.display.Sprite;	import flash.events.NetStatusEvent;	import flash.media.Video;	import flash.net.NetConnection;	import flash.net.NetStream;	import flash.display.Shape;	import flash.display.MovieClip;	import flash.events.MouseEvent;	import flash.utils.Timer;		public class Member extends Sprite {				public static const MAX_WIDTH = 300;				public var connection	:NetConnection;		public var userId		:String;		public var peerId		:String;				protected var stream	:NetStream;		protected var video 	:Video;		protected var bar		:Sprite;				public function Member(userId:String, peerId:String) {			this.userId = userId;			this.peerId = peerId;			video = new Video();			video.width  = 300;			video.height = (video.width/4)*3;			addChild(video);			drawBar();						addEventListener(MouseEvent.MOUSE_OVER, mover);			addEventListener(MouseEvent.MOUSE_OUT, mout);		}				private function drawBar():void {			bar = new Sprite();			bar.graphics.beginFill(0x000000, 0.2);			bar.graphics.drawRect(0,0,video.width,30);			bar.graphics.endFill();			bar.y = video.height-bar.height;			addChild(bar);		}				public function connectToVideo(connection:NetConnection):void {			trace('Connecting to video of: ' + userId + ', stream: ' + peerId);						stream = new NetStream(connection, peerId);			stream.addEventListener(NetStatusEvent.NET_STATUS, onNetStatus);			stream.receiveAudio(false);			stream.play(userId);			video.attachNetStream(stream);		}				public function disconnectFromVideo():void {			removeChild(video);			stream.close();		}				public function audioOn():void {			stream.receiveAudio(true);		}				public function audioOff():void {			stream.receiveAudio(false);		}				public function onNetStatus(e:NetStatusEvent):void {			trace('Net status ' + peerId + ': ' + e.info.code);		}				function mover(e:*):void {			bar.visible = true;		}				function mout(e:*):void {			bar.visible = false;		}	}}